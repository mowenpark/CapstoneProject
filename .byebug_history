c
@companies
c
Company.first.locations.includes("ca")
Company.first.locations.includes("mo")
Company.first.locations
Company.where(location in "Huelberg, Montana (US)")
Company.where(location: "Huelberg, Montana (US)")
Company.where(t[:locations].matches("Huelberg, Montana (US)"))
Company.where(t[:locations].matches("%#{location}%"))
Company.where(t[:name].matches("%#{location}%"))
Company.where("locations LIKE ?", "%#{location}%")
Company.where(t[:name].matches("%#{name}%")).where("locations LIKE ?", "%#{location}%")
c
Company.first.locations
Company.where(t[:name].matches("%#{name}%")).where(t[:locations].matches("%#{location}%"))
Company.where(t[:name].matches("%#{name}%")).where(t[:location].matches("%#{location}%"))
c
Company.where(t[:name].matches("%#{name}%")).where('location icn (:locations)')
Company.where(t[:name].matches("%#{name}%"))
Company.where(t[:name].matches("%#{name}%")).where('location in (:locations)')
location
c
Company.where(t[:name].matches("%m%")).includes(:location)
Company.where(t[:name].matches("%m%"))
@companies
c
Company.where(t[:name].matches("%m%"))
name
@companies
s
c
current_user
params
c
current_user
review_params
c
user
c
User.find_by_email("mike@mail.com")
User.all
user
c
User.find_by_credentials(params["email"], "mikemike")
params
c
current_user
c
s
Review.new(review_params)
review_params
exit
review_params
params
exit
review.user.email
review.user
exit
@reviews
review[:username] = review.user.email
review.user.email
review
c
current_user
c
@review.user_id = current_user.id
@review
c
Review.where(program_id: params["program_id"])
exit
Program.all.each { |program| puts program.id}
Program.all.each do |program|
Program.first.id
c
id
id = 1
Review.where(program_id: 1)
params
exit
Review.where(program_id: 1)
Review.where(program_id: id)
id
c
params["program_id"]
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
xit
params
exit
@locations
json.extract! @locations
json.location location
location
exit
Program.all.pluck(:location).uniq
Program.all.pluck(:location).distinct
exit
params
exit
@programs = Program.where(t[:title].matches("%ko%")).where(t[:location].matches("%#{location}%"))
@programs = Program.where(t[:title].matches("%#{title}%")).where(t[:location].matches("%#{location}%"))
@programs = Program.where(t[:title].matches("%#{title}%").where(t[:location].matches("%#{location}%"))
@programs = Program.where(t[:location].matches("%#{location}%"))
t[:location]
t
@programs
@programs = Program.where(t[:title].matches("%#{title}%"), t[:location].matches("%#{location}%"))
params
location
exit
redirect_session
current_user != @user
@user
current_user
exit
Program.where(t[:title].matches("%#{title}%"))
exit
Program.where(t[:title].matches("%#{title}%"))
exit
title
Program.where(t[:title].matches("#{title}"))
exit
Program.arel_table
Program.where("title LIKE ?", "%m%")
Program.where("title LIKE ?", "%k%")
Program.where("title LIKE ?", "k")
title
exit
c
params
exit
Program.where("title LIKE ?", "%#{params["name"]}%")
Program.where("title LIKE ?", "%#{params[name]}%")
Program.where("title LIKE ?", "%{params[name]}%")
Program.where("title LIKE ?", "%params[name]%")
params
exit
q
n
s
params
q
exit
q
params
c
@programs = Program.all
n
s
q
params
c
s
@user
